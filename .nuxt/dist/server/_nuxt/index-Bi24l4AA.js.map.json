{"file":"index-Bi24l4AA.js","mappings":";;AAEO,MAAM,mBAAmB,MAAM;AACpC,QAAM,SAAS,IAAI,CAAE,CAAA;AAErB,QAAM,WAAW,CAAC,UAAU;AAC1B,UAAM,QAAQ,KAAK,IAAG;AACtB,WAAO,MAAM,KAAK;AAAA,MAChB,IAAI;AAAA,MACJ;AAAA,MACA,OAAO;AAAA,MACP,aAAa;AAAA,IACd,CAAA;AAAA,EACL;AAEE,QAAM,cAAc,CAAC,OAAO;AAC1B,QAAI,OAAO,MAAM,SAAS,GAAG;AAC3B,aAAO,QAAQ,OAAO,MAAM,OAAO,CAAC,UAAU,MAAM,OAAO,EAAE;AAAA,IACnE;AAAA,EACA;AAEE,SAAO,EAAE,QAAQ,UAAU,YAAW;AACxC;;;;;AC8FA,UAAM,EAAE,QAAQ,UAAU,YAAA,IAAgB,iBAAiB;AACrD,UAAA,cAAc,IAAI,EAAE;AACpB,UAAA,eAAe,IAAI,IAAI;AACvB,UAAA,oBAAoB,IAAI,KAAK;AAC7B,UAAA,gBAAgB,IAAI,EAAE;AACtB,UAAA,YAAY,IAAI,KAAK;AACJ,QAAI,IAAI;AACd,QAAI,EAAE,GAAG,GAAG,GAAG,EAAG,CAAA;AACnC,UAAM,YAAY,IAAI,EAAE,GAAG,KAAK,GAAG,KAAK;AAClC,UAAA,gBAAgB,IAAI,IAAI;AAWxB,UAAA,cAAc,SAAS,OAAO;AAAA,MAClC,UAAU;AAAA,MACV,MAAM,GAAG,UAAU,MAAM,CAAC;AAAA,MAC1B,KAAK,GAAG,UAAU,MAAM,CAAC;AAAA,MACzB,WAAW;AAAA,MACX,YAAY,UAAU,QAAQ,SAAS;AAAA,IAAA,EACvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../composables/useDynamicFields.js","../../../../pages/index.vue"],"sourcesContent":["import { ref } from 'vue'\n\nexport const useDynamicFields = () => {\n  const fields = ref([])\n\n  const addField = (label) => {\n    const newId = Date.now()\n    fields.value.push({\n      id: newId,\n      label: label,\n      value: '',\n      placeholder: 'Enter your text here'\n    })\n  }\n\n  const removeField = (id) => {\n    if (fields.value.length > 0) {\n      fields.value = fields.value.filter((field) => field.id !== id)\n    }\n  }\n\n  return { fields, addField, removeField }\n}\n","<template>\n  <div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-slate-50 to-cyan-50 p-8 animate-fadeIn\">\n    <section class=\"text-center space-y-6 mb-16\">\n      <h2 class=\"text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 via-blue-400 to-cyan-500 animate-pulse\">\n        Dynamic Text Generator\n      </h2>\n      <p class=\"text-xl text-blue-600/70 max-w-2xl mx-auto\">\n        Transform your ideas into structured content effortlessly\n      </p>\n    </section>\n\n    <main class=\"max-w-4xl mx-auto space-y-8\">\n      <!-- Input Fields Card -->\n      <div class=\"backdrop-blur-sm bg-white/60 rounded-2xl p-8 shadow-lg border border-blue-100 hover:shadow-blue-100/50 transition-all duration-300\">\n        <div class=\"space-y-6\">\n          <!-- Dynamic Fields -->\n          <div v-for=\"field in fields\" :key=\"field.id\" \n               class=\"space-y-2 p-4 rounded-xl bg-blue-50/50 hover:bg-blue-50 transition-all duration-300 group\">\n            <div class=\"flex justify-between items-center\">\n              <label :for=\"'field-' + field.id\" class=\"text-sm font-medium text-blue-700\">\n                {{ field.label }}\n              </label>\n              <button @click=\"removeField(field.id)\" \n                      class=\"opacity-0 group-hover:opacity-100 text-sm px-4 py-1.5 rounded-lg bg-red-50 text-red-500 hover:bg-red-100 transition-all duration-300\"\n                      v-if=\"fields.length > 0\">\n                Remove\n              </button>\n            </div>\n            <input\n              :id=\"'field-' + field.id\"\n              v-model=\"field.value\"\n              type=\"text\"\n              :placeholder=\"field.placeholder\"\n              class=\"w-full px-4 py-3 rounded-lg bg-white/80 border border-blue-100 focus:border-blue-400 focus:ring-4 focus:ring-blue-100 outline-none transition-all duration-300\"\n            />\n          </div>\n\n          <!-- Add Field Button -->\n          <button @click=\"showAddFieldModal = true\" \n                  class=\"w-full px-4 py-3 rounded-lg bg-gradient-to-r from-blue-500 to-cyan-500 text-white hover:from-blue-600 hover:to-cyan-600 transition-all duration-300 flex items-center justify-center gap-2 shadow-md hover:shadow-lg\">\n            <span class=\"text-xl\">+</span> Add New Field\n          </button>\n        </div>\n      </div>\n\n      <!-- Action Buttons -->\n      <div class=\"flex gap-4\">\n        <button @click=\"convertToTxt\" \n                class=\"flex-1 px-6 py-4 rounded-lg bg-gradient-to-r from-blue-600 to-cyan-500 text-white hover:from-blue-700 hover:to-cyan-600 transition-all duration-300 shadow-lg hover:shadow-xl hover:-translate-y-0.5\">\n          Generate Text File\n        </button>\n      </div>\n\n      <!-- Preview Section -->\n      <div v-if=\"previewText\" \n           class=\"backdrop-blur-sm bg-white/60 rounded-2xl p-8 shadow-lg border border-blue-100 hover:shadow-blue-100/50 transition-all duration-300 space-y-4\">\n        <div class=\"flex justify-between items-center\">\n          <h3 class=\"text-lg font-medium text-blue-800\">Preview</h3>\n          <div class=\"flex gap-4 items-center\">\n            <button\n              @click=\"toggleChase\"\n              class=\"px-4 py-1.5 rounded-lg bg-gradient-to-r from-purple-500 to-pink-500 text-white hover:from-purple-600 hover:to-pink-600 transition-all duration-300 shadow-md hover:shadow-lg hover:-translate-y-0.5 text-sm\"\n            >\n              {{ isChasing ? 'Stop' : 'Chase Me' }}\n            </button>\n          </div>\n        </div>\n        <div class=\"bg-blue-50/50 rounded-xl p-6\">\n          <pre class=\"text-blue-800 whitespace-pre-wrap\">{{ previewText }}</pre>\n        </div>\n      </div>\n\n      <!-- Floating Download Button -->\n      <a\n        v-if=\"previewText && buttonVisible\"\n        ref=\"downloadButton\"\n        :href=\"downloadLink\"\n        download=\"converted.txt\"\n        @click=\"handleDownload\"\n        class=\"fixed px-3 py-1.5 rounded-lg bg-gradient-to-r from-green-500 to-emerald-500 text-white text-sm shadow-md z-50 cursor-pointer select-none\"\n        :style=\"buttonStyle\"\n      >\n        Download\n      </a>\n\n      <!-- Add Field Modal -->\n      <div v-if=\"showAddFieldModal\" \n           class=\"fixed inset-0 bg-blue-900/20 backdrop-blur-sm flex items-center justify-center transition-all duration-300\">\n        <div class=\"bg-white rounded-2xl p-8 shadow-2xl border border-blue-100 w-full max-w-md\">\n          <h3 class=\"text-xl font-medium text-blue-800 mb-6\">Add New Field</h3>\n          <input\n            v-model=\"newFieldLabel\"\n            type=\"text\"\n            placeholder=\"Enter field label\"\n            class=\"w-full px-4 py-3 rounded-lg bg-blue-50/50 border border-blue-100 focus:border-blue-400 focus:ring-4 focus:ring-blue-100 outline-none transition-all duration-300 mb-6\"\n          />\n          <div class=\"space-y-3\">\n            <button @click=\"addField(newFieldLabel); showAddFieldModal = false; newFieldLabel = ''\" \n                    class=\"w-full px-4 py-3 rounded-lg bg-gradient-to-r from-blue-500 to-cyan-500 text-white hover:from-blue-600 hover:to-cyan-600 transition-all duration-300 shadow-md hover:shadow-lg\">\n              Add Field\n            </button>\n            <button @click=\"showAddFieldModal = false\" \n                    class=\"w-full px-4 py-3 rounded-lg bg-slate-100 text-slate-600 hover:bg-slate-200 transition-all duration-300\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script setup>\nimport { useDynamicFields } from '~/composables/useDynamicFields'\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\n\nconst { fields, addField, removeField } = useDynamicFields()\nconst previewText = ref('')\nconst downloadLink = ref(null)\nconst showAddFieldModal = ref(false)\nconst newFieldLabel = ref('')\nconst isChasing = ref(false)\nconst downloadButton = ref(null)\nconst mousePos = ref({ x: 0, y: 0 })\nconst buttonPos = ref({ x: 100, y: 100 })\nconst buttonVisible = ref(true)\nlet animationFrameId = null\n\n// Track mouse position\nconst handleMouseMove = (e) => {\n  mousePos.value = { x: e.clientX, y: e.clientY }\n  if (isChasing.value) {\n    updateButtonPosition()\n  }\n}\n\nconst buttonStyle = computed(() => ({\n  position: 'fixed',\n  left: `${buttonPos.value.x}px`,\n  top: `${buttonPos.value.y}px`,\n  transform: 'translate(-50%, -50%)',\n  transition: isChasing.value ? 'none' : 'all 0.3s ease'\n}))\n\nconst toggleChase = () => {\n  isChasing.value = !isChasing.value\n  if (isChasing.value) {\n    startChasing()\n  } else {\n    stopChasing()\n  }\n}\n\nconst startChasing = () => {\n  // Initialize button position\n  buttonPos.value = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  }\n  updateButtonPosition()\n}\n\nconst stopChasing = () => {\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId)\n  }\n  // Reset button position\n  buttonPos.value = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  }\n}\n\nconst updateButtonPosition = () => {\n  if (!isChasing.value) return\n\n  const dx = mousePos.value.x - buttonPos.value.x\n  const dy = mousePos.value.y - buttonPos.value.y\n  const distance = Math.sqrt(dx * dx + dy * dy)\n  \n  if (distance < 200) { // Detection radius\n    const angle = Math.atan2(dy, dx)\n    const speed = Math.min(20, 300 / distance) // Faster when cursor is closer\n    \n    // Calculate new position\n    let newX = buttonPos.value.x - Math.cos(angle) * speed\n    let newY = buttonPos.value.y - Math.sin(angle) * speed\n    \n    // Get button dimensions\n    const buttonWidth = downloadButton.value?.offsetWidth || 0\n    const buttonHeight = downloadButton.value?.offsetHeight || 0\n    \n    // Add padding from edges\n    const padding = 10\n    \n    // Boundary checking with padding\n    newX = Math.max(buttonWidth / 2 + padding, Math.min(window.innerWidth - buttonWidth / 2 - padding, newX))\n    newY = Math.max(buttonHeight / 2 + padding, Math.min(window.innerHeight - buttonHeight / 2 - padding, newY))\n    \n    buttonPos.value = { x: newX, y: newY }\n  }\n  \n  animationFrameId = requestAnimationFrame(updateButtonPosition)\n}\n\nconst handleDownload = (event) => {\n  if (isChasing.value) {\n    event.preventDefault()\n  }\n}\n\nconst convertToTxt = () => {\n  const content = fields.value\n    .map(field => `${field.label}:\\n${field.value}\\n`)\n    .join('\\n')\n  previewText.value = content\n  const blob = new Blob([content], { type: 'text/plain' })\n  downloadLink.value = URL.createObjectURL(blob)\n}\n\n// Lifecycle hooks\nonMounted(() => {\n  window.addEventListener('mousemove', handleMouseMove)\n})\n\nonUnmounted(() => {\n  window.removeEventListener('mousemove', handleMouseMove)\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId)\n  }\n})\n</script>"],"version":3}